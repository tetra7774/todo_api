openapi: 3.0.0
info:
  title: "TODO API DOCUMENT"
  version: "0.0.1"
tags:
  - name: opts
    description: 運用監視系のAPI
  - name: tasks
    description: タスク関連のAPI

paths:
  /health:
    get: 
      tags: 
        - opts
      responses: 
        '200':
          description: 
            "OK"

  /tasks/:
    get:
      summary: "タスク一覧取得"
      description: "タスクの一覧を取得できます"
      operationId: "listTasks"
      tags:
        - "tasks"
      responses:
        '200':
          description: "OK"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/TaskListDTO"
        '400':
          description: "Bad Request"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/BadRequestError"
      parameters:
      - name: "limit"
        in: "query"
        description: "リストに含まれるリソース数"
        required: true
        schema: 
          type: integer
          format: int32
          minimum: 1
          maximum: 100
          default: 10
      - name: "offset"
        in: "query"
        description: "オフセット"
        required: true
        schema:
          type: integer
          format: int64
          minimum: 0
          default: 0
    post:
      summary: "タスク作成"
      description: "タスクを新規作成します"
      operationId: "createTask"
      tags: 
        - tasks
      requestBody:
        description: "title"
        required: true
        content:
          "application/json":
            schema: 
              $ref: "#/components/schemas/TaskForm"
      responses:
        '201':
          description: "Created"
          headers:
            location: 
              description: "作成されたリソースのURI"
              schema: 
                type: string
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/TaskDTO"
        '400':
          description: "不正なパラメータを指定している"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/BadRequestError"
         
  /tasks/{taskID}:
    put:
      summary: "タスク更新"
      description: "指定されたタスクをリクエストボディの内容で上書きします"
      operationId: "editTask"
      tags:
        - "tasks"
      parameters:
        - name: taskID
          in: path
          description: "更新するタスクのID"
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody: 
        description: "title"
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/TaskForm"
      responses:
        '200': 
          description: "OK"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/TaskDTO"
        '400':
          description: "Bad Request"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/BadRequestError"       
    get:
      summary: "タスク取得"
      description: "指定したIDのタスクを1件取得します"
      operationId: showTask
      parameters:
        - name: taskID
          in: path
          required: true
          description: "詳細を取得するタスクのID"
          schema:
            type: integer
            format: int64

      tags: 
        - tasks
      responses:
        '200':
          description:
            'OK'
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/TaskDTO"
        '404':
          description:
            'Not found'
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ResourceNotFoundError"
    delete: 
      summary: "タスク削除"
      tags:
        - "tasks"
      description: "指定したIDのタスクを1件削除します"
      operationId: deleteTask
      parameters:
      - name: taskID
        in: "path"
        description: "削除するタスクのID"
        required: true
        schema: 
          type: integer
          format: int64
          minimum: 1
      responses:
        '204':
          description:
            'No Content'
        '404':
          description: "Not Found"
          content:
            "application/json":
              schema: 
                $ref: "#/components/schemas/ResourceNotFoundError"
components:
  schemas:
    TaskForm:
      type: object
      properties:
        title:
          type: string
          description: "作成されるタスクのタイトル"
          maxLength: 256
          minLength: 1
      required: 
        - title
    TaskDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "タスクID"
        title: 
          type: string
          description: "タスクのタイトル"
      required:
        - "id"
        - "title"
    TaskListDTO:
      description: "タスクのリスト"
      type: object
      properties:
        page: 
          $ref: "#/components/schemas/pageDTO"
        result:
          type: array
          items:
            $ref: "#/components/schemas/TaskDTO" 
      required:
        - "result"
    pageDTO:
      description: "ページング情報"
      type: object
      properties:
        limit:
          description: "リクエストされた件数"
          type: integer
          format: int32
        offset:
          description: "リクエストされたオフセット"
          type: integer
          format: int64
        size:
          description: "取得できた件数"
          type: integer
          format: int32
      required:
          - limit
          - offset
          - size

    ResourceNotFoundError:
      description: "指定したリソースが存在しない"
      type: object
      properties:
        title:
          type: string
          description: "エラーのタイトル"
          default: "Resouce Not Found"
        detail:
          type: string
          description: "エラーの詳細"
      required: 
        - title
        - detail
    BadRequestError:
      description: "リクエストが不正"
      type: object
      properties:
        title:
          type: string
          description: "エラーのタイトル"
          default: "Bad Request"
        detail:
          type: string
          description: "エラーの詳細"
          default: "リクエストが不正です。正しいパラメータを指定してリトライしてください"
        invalid-params:
          type: array
          items: 
            $ref: "#/components/schemas/InvalidParam"
      required:
        - "title"
        - "detail"
        - "invalid-params"
    InvalidParam:
      description: "不正なリクエストについての詳細"
      type: object
      properties:
        name: 
          type: string
          description: "エラーが発生したフィールド名"
        reason:
          type: string
          description: "エラーの理由"
      required:
        - name
        - reason
            

    
